{
  "openapi": "3.0.0",
  "info": {
    "title": "Your API v1",
    "version": "1.0.0",
    "description": "API v1 documentation with JWT authentication"
  },
  "servers": [
    {
      "url": "https://homeaiservice.onrender.com/api/v1",
      "description": "Development server (HTTP) for v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "Authenticate user",
        "security": [],
        "description": "Authenticates a user with email and password, returning a JWT token upon success.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "P@ssw0rd123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged in Successfully"
                    },
                    "data": {
                      "type": "string",
                      "description": "JWT token for the authenticated user"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or incorrect credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "security": [],
        "description": "Creates a new user account with the provided details.",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "description": "User's first name",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "User's last name",
                    "example": "Doe"
                  },
                  "company_name": {
                    "type": "string",
                    "description": "Name of the user's company (optional)",
                    "example": "Acme Corp"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "P@ssw0rd123"
                  },
                  "phone": {
                    "type": "string",
                    "description": "User's phone number (optional)",
                    "example": "+1234567890"
                  },
                  "pfp": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL to the user's profile picture (optional)",
                    "example": "https://example.com/profile.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "JWT token for the registered user"
                    },
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully Registered."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/listing": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Create a new listing for a user",
        "description": "Adds a new property listing to a user's profile.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the user to associate the listing with.",
                    "example": "user@example.com"
                  },
                  "zip_code": {
                    "type": "string",
                    "description": "Zip code of the property.",
                    "example": "12345"
                  },
                  "bathrooms": {
                    "type": "integer",
                    "description": "Number of bathrooms.",
                    "example": 2
                  },
                  "land_size": {
                    "type": "number",
                    "description": "Size of the land in square meters.",
                    "example": 1500
                  },
                  "state": {
                    "type": "string",
                    "description": "State where the property is located.",
                    "example": "California"
                  },
                  "city": {
                    "type": "string",
                    "description": "City where the property is located.",
                    "example": "San Francisco"
                  },
                  "building_size": {
                    "type": "number",
                    "description": "Size of the building in square meters.",
                    "example": 200
                  },
                  "property_type": {
                    "type": "string",
                    "description": "Type of the property.",
                    "example": "Apartment"
                  },
                  "address": {
                    "type": "string",
                    "description": "Address of the property.",
                    "example": "123 Main St"
                  },
                  "property_id": {
                    "type": "string",
                    "description": "Unique identifier for the property.",
                    "example": "PROP123"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "https://example.com/image.jpg"
                    }
                  },
                  "bedrooms": {
                    "type": "integer",
                    "description": "Number of bedrooms.",
                    "example": 3
                  },
                  "url": {
                    "type": "string",
                    "description": "URL of the property listing.",
                    "example": "https://example.com/listing"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the property.",
                    "example": "Beautiful apartment with sea view."
                  },
                  "prices": {
                    "type": "object",
                    "description": "Pricing information for the property.",
                    "example": {
                      "USD": 176000,
                      "CAD": 250000
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Listing created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Created listing"
                    },
                    "data": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields or email not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Error adding listing, provided email does not exist."
                    },
                    "data": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error creating listing."
                    },
                    "data": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/listings/available/{zip_code}": {
      "post": {
        "summary": "Retrieve a list of available properties",
        "description": "Retrieve a list of available properties based on the zip code and optionally the number of listings to retrieve.",
        "tags": [
          "Real Estate API"
        ],
        "parameters": [
          {
            "name": "zip_code",
            "in": "path",
            "description": "The zip code to search for properties in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Optional body parameter to specify the number of listings to retrieve.",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number_of_listings": {
                    "type": "integer",
                    "description": "The number of listings to retrieve.",
                    "example": 25
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of available properties based on the zip code and optional number of listings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_number_of_listings": {
                      "type": "integer",
                      "example": 25
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "address": {
                            "type": "string",
                            "example": "123 Main St"
                          },
                          "city": {
                            "type": "string",
                            "example": "Anytown"
                          },
                          "state": {
                            "type": "string",
                            "example": "CA"
                          },
                          "zip_code": {
                            "type": "string",
                            "example": "12345"
                          },
                          "property_type": {
                            "type": "string",
                            "example": "House"
                          },
                          "bedrooms": {
                            "type": "integer",
                            "example": 3
                          },
                          "bathrooms": {
                            "type": "integer",
                            "example": 2
                          },
                          "building_size": {
                            "type": "integer",
                            "example": 1500
                          },
                          "prices": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer"
                            },
                            "example": {
                              "rent": 2000,
                              "sale": 300000
                            }
                          },
                          "image": {
                            "type": "string",
                            "example": "http://example.com/image.jpg"
                          },
                          "url": {
                            "type": "string",
                            "example": "http://example.com/listing/1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid zip_code or number_of_listings provided."
          },
          "404": {
            "description": "No properties found for the given zip_code."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/listings/available/": {
      "get": {
        "summary": "Fetch property details for a given listing URL.",
        "description": "Retrieves detailed property information using the provided listing URL.",
        "tags": [
          "Real Estate API"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "listingUrl",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The URL of the property listing to fetch details for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved property details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the listing."
                    },
                    "title": {
                      "type": "string",
                      "description": "Title or name of the property listing."
                    },
                    "price": {
                      "type": "number",
                      "description": "Price of the property."
                    },
                    "location": {
                      "type": "string",
                      "description": "Location of the property."
                    },
                    "[ other_properties ]": {
                      "description": "Other relevant fields of the ListingDetailed object."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid `listingUrl` query parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid or missing listingUrl parameter."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No property details found for the given URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No property details found for the given URL."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching property details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to fetch property details. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/history/average-price-by-bathrooms": {
      "get": {
        "tags": [
          "Historic data"
        ],
        "summary": "Get average price by bathrooms",
        "description": "Returns the average price of properties grouped by the number of bathrooms.",
        "responses": {
          "200": {
            "description": "A list of properties with average prices by bathrooms."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/history/average-price-by-bedrooms": {
      "get": {
        "tags": [
          "Historic data"
        ],
        "summary": "Get average price by bedrooms",
        "description": "Returns the average price of properties grouped by the number of bedrooms.",
        "responses": {
          "200": {
            "description": "A list of properties with average prices by bedrooms."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/history/average-price-by-state": {
      "get": {
        "tags": [
          "Historic data"
        ],
        "summary": "Get average price by state",
        "description": "Returns the average price of properties for each state.",
        "responses": {
          "200": {
            "description": "A list of properties with average prices by state."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/history/properties-count-by-size": {
      "get": {
        "tags": [
          "Historic data"
        ],
        "summary": "Get property count by size",
        "description": "Returns the count of properties grouped by their size.",
        "responses": {
          "200": {
            "description": "A list of properties grouped by size."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/history/properties-count-by-state": {
      "get": {
        "tags": [
          "Historic data"
        ],
        "summary": "Get property count by state",
        "description": "Returns the count of properties for each state.",
        "responses": {
          "200": {
            "description": "A list of properties grouped by state."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/history/sales-by-year": {
      "get": {
        "tags": [
          "Historic data"
        ],
        "summary": "Get sales by year",
        "description": "Returns the number of sales of properties grouped by year.",
        "responses": {
          "200": {
            "description": "A list of property sales by year."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "deprecated": true,
        "summary": "Retrieve a list of users",
        "security": [],
        "description": "Retrieve a list of users from the API. Can be used to populate a list of users in your system.",
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "mail": {
                        "type": "string",
                        "example": "john.doe@example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, please check the request format."
          },
          "404": {
            "description": "No users found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "tags": []
}